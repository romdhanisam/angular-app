{"ast":null,"code":"import { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { projectReducer } from '@Store/reducers/app-reducer';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from '../environments/environment';\nimport { themeReducer } from \"@Store/reducers/theme-reducer\";\nimport LayoutComponent from \"@Resource/layout/layout.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"@ngrx/store-devtools\";\nimport * as i4 from \"@angular/service-worker\";\nexport const routes = [{\n  path: '',\n  component: LayoutComponent,\n  children: [{\n    path: 'main',\n    loadComponent: () => import('@Resource/core/main.component')\n  }, {\n    path: 'about',\n    loadComponent: () => import('@Global/foundation/about.component')\n  }, {\n    path: '',\n    redirectTo: 'main',\n    pathMatch: 'full'\n  }]\n}];\nlet AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [BrowserModule, HttpClientModule, BrowserAnimationsModule, RouterModule.forRoot(routes), StoreModule.forRoot({\n        projects: projectReducer,\n        theme: themeReducer\n      }), StoreDevtoolsModule.instrument({\n        maxAge: 25,\n        logOnly: !isDevMode()\n      }), ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: environment.production,\n        // Register the ServiceWorker as soon as the application is stable\n        // or after 30 seconds (whichever comes first).\n        registrationStrategy: 'registerWhenStable:30000'\n      })]\n    });\n  }\n  return AppModule;\n})();\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}